#!/usr/bin/env perl
#
# Author: Guillermo Ramos <gramos@gramos.me> (2019)
#
# Run `tgsend -h` for quick help, or `tgsend -h -v` for full manual.
#
# Dependencies: HTTP-Message, JSON
################################################################################

$main::VERSION = "0.1.1";

use Getopt::Long qw(:config auto_version);
use Pod::Usage qw<pod2usage>;

# Local modules
use FindBin;
use lib "$FindBin::Bin/lib";
use TgLib qw<fetch_token>;
require TgLib::Api;
require TgLib::Logger;

my $TOKEN;
my $PRETEND;
my $VERBOSE = 0;
my $HELP;

# Parse CLI options
GetOptions("token=s" => \$TOKEN,
           "pretend" => \$PRETEND,
           "verbose+" => \$VERBOSE,
           "help" => \$HELP);
pod2usage(-verbose => $VERBOSE+1) if $HELP or ! @ARGV;

my $logger = TgLib::Logger->new($VERBOSE);

# Fetch token: CLI || env || file
$TOKEN ||= fetch_token() or
    pod2usage(-message => "ERROR: Unable to get bot token ($!).\n",
                  -verbose => 99, -sections => "AUTHENTICATION");

# Read text from stdin
undef $/;
my $text = <STDIN>;

# Send message to chats (or pretend to)
if ($PRETEND) {
    $logger->info("(prentend) Sending to $_:\n====\n$text\n====\n") foreach @ARGV;
} else {
    my $api = TgLib::Api->new($TOKEN, $logger);
    $api->send_message($_, $text) foreach @ARGV;
}


__END__

=head1 NAME

tgsend - Send message to a Telegram chat using a bot token

=head1 SYNOPSIS

tgsend [-h | --help] [-v]

tgsend [options] [chatid1 chatid2 ...]

=head1 OPTIONS

  --pretend | -p      Do not actually do anything
  --token | -t        Bot token (see AUTHENTICATION)
  --version           Show version
  --verbose | -v      Show more information (combine with -h to see full manual)
  --help | -h         Show this message

=head1 DESCRIPTION

This program sends its standard input to the Telegram chats whose IDs are passed
as arguments, using the given bot token.

=head1 AUTHENTICATION

To get the bot token, this program will check (in order):

  - The "--token" CLI argument
  - The "TGUTILS_TOKEN" environment variable
  - The contents of "$XDG_CONFIG_HOME/tgutils_token"
    (usually ~/.config/tgutils_token)

=cut
